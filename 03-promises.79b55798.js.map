{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXEO,SAASC,cAAc,SAuC/BC,iBAAiB,UAxBxB,SAA+BC,GAC3BA,EAAEC,iBACF,MAAQX,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,OAAOC,SACnCC,EAAaC,OAAON,EAAMO,OAC1BC,EAAiBF,OAAOL,EAAKM,OAC7BE,EAAcH,OAAOJ,EAAOK,OAElC,IAAIG,EAAW,EAEf,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAaE,IAC7BD,GAAY,EAEZxB,EAAcwB,EAAUL,GACvBO,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACfyB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAU,IAE3E4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAChByB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,MAAU,IAGzEiB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n}\n\nfunction createPromiseOnSubmit(e) {\n    e.preventDefault()\n    const { delay, step, amount } = e.target.elements\n    const delayInput = Number(delay.value);\n    const stepDelayInput = Number(step.value);\n    const amountInput = Number(amount.value);\n\n    let position = 0;\n  \n    for (let i = 0; i < amountInput; i++) {\n        position += 1;\n\n        createPromise(position, delayInput)\n        .then(({ position, delay }) => {\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      \n        delayInput += stepDelayInput;\n      };\n}\n \nformEl.addEventListener('submit', createPromiseOnSubmit)\n\n \n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","delay1","step","amount","target","elements","delayInput","Number","value","stepDelayInput","amountInput","position1","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.79b55798.js.map"}